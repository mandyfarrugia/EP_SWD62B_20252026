@model Domain.Models.Book //Compatible to display only Book details.

@{
    string TitleText = string.IsNullOrWhiteSpace(Model?.Title) ? "(Untitled)" : Model!.Title;
    string CategoryName = Model?.Category?.Name ?? "Uncategorized";
    string Monogram(string? s) => string.IsNullOrWhiteSpace(s) ? "?" : s.Trim()[0].ToString().ToUpper();
}
 
<style>
  .details-wrap{max-width:900px;margin:0 auto;padding:1rem}
  .btn{padding:.55rem .8rem;border-radius:.5rem;border:1px solid #d1d5db;background:#111827;color:#fff;cursor:pointer;text-decoration:none;display:inline-block}
  .btn.secondary{background:#fff;color:#111827}
  .card{border:1px solid #e5e7eb;border-radius:.75rem;background:#fff;box-shadow:0 1px 3px rgba(0,0,0,.05);display:flex;flex-direction:column;overflow:hidden}
  .card-media{width:100%;height:220px;background:#f3f4f6;overflow:hidden}
  .card-media img{width:100%;height:100%;display:block;object-fit:cover;object-position:center}
  .card-media--fallback{display:flex;align-items:center;justify-content:center;font-weight:800;font-size:2.5rem;color:#fff;background:#1e40af}
  .card-body{padding:1rem 1.1rem 1.1rem;display:flex;flex-direction:column;gap:.75rem}
  .title{font-size:1.35rem;font-weight:700;margin:0;color:#111827}
  .meta{font-size:.95rem;color:#374151}
  .pill{display:inline-block;padding:.2rem .5rem;font-size:.75rem;border-radius:9999px;border:1px solid #e5e7eb;background:#f9fafb;color:#374151}
  .pill.bad{background:#fef2f2;color:#991b1b;border-color:#fecaca}
  .price{font-weight:700}
  .specs{display:grid;grid-template-columns:160px 1fr;gap:.4rem 1rem;margin-top:.25rem}
  .specs dt{font-weight:600;color:#374151}
  .specs dd{margin:0;color:#111827}
  .actions{margin-top:.75rem;display:flex;gap:.5rem}
</style>
 
<div class="details-wrap">
<article class="card">
    @if (!string.IsNullOrWhiteSpace(Model?.Path))
    {
<div class="card-media">
<img src="@Model.Path" alt="@TitleText" loading="lazy" />
</div>
    }
    else
    {
<div class="card-media card-media--fallback">@Monogram(TitleText)</div>
    }
 
    <div class="card-body">
<h1 class="title">@TitleText</h1>
<div class="meta">
<span>@CategoryName</span> &middot; <span>@Model!.PublishedYear</span>
</div>
 
      <div>
<span class="pill price">€ @Model.WholesalePrice.ToString("0.00")</span>
<span class="pill @(Model.Stock <= 0 ? "bad" : "")" style="margin-left:.4rem">
          @((Model.Stock <= 0) ? "Out of stock" : $"Stock: {Model.Stock}")
</span>
</div>
 
      <dl class="specs">
<dt>Category</dt><dd>@CategoryName</dd>
<dt>Published Year</dt><dd>@Model.PublishedYear</dd>
<dt>Wholesale Price</dt><dd>€ @Model.WholesalePrice.ToString("0.00")</dd>
<dt>Internal ID</dt><dd>@Model.Id</dd>
</dl>
 
      <div class="actions">
<a class="btn" href="@Url.Action("Update","Books", new { id = Model.Id })">Edit</a>
<a class="btn secondary" href="@Url.Action("Index","Books")">Back to list</a>
</div>
</div>
</article>
</div>