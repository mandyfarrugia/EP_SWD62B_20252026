@using Domain.Models
@model Presentation.Models.BooksCreateViewModel //This is the model the page will respect by allowing us to access the properties of Book via Model.

<!-- multipart/form-data accepts files to be submitted instead of just plain text. -->
<form method="post" action="/Books/Create" enctype="multipart/form-data">
    <div class="col-md-4 mb-3">
        <label class="form-label">Title</label>
        <input class="form-control" type="text" name="Book.Title" />
    </div>
    <div class="col-md-4 mb-3">
        <label class="form-label">Category</label>
        <select class="form-control" name="Book.CategoryFK">
            <option value="-1">Pick a category</option>
            @if (Model.Categories != null)
            {
                @foreach (Category category in Model.Categories)
                {
                    //Value is what will be submitted, normally IDs are submitted and names are displayed.
                    <option value="@category.Id">@category.Name</option>
                }
            }
        </select>
    </div>
    <div class="col-md-4 mb-3">
        <label class="form-label">Wholesale price</label>
        <input class="form-control" type="number" name="Book.WholesalePrice"/>
    </div>
    <div class="col-md-4 mb-3">
        <label class="form-label">Published Year</label>
        <input class="form-control" type="number" name="Book.PublishedYear"/>
    </div>
    <div class="col-md-4 mb-3">
        <label class="form-label">Stock</label>
        <input class="form-control" type="number" name="Book.Stock" />
    </div>
    <div class="col-md-4 mb-3">
        <label class="form-label">Upload a file</label>
        <!-- The name attribute has to hold the property to which the file control value is going to be mapped to. -->
        <input class="form-control" type="file" name="UpdatedFile" />
    </div>
    <input class="btn btn-primary" type="submit" value="Submit" />
</form>